@page
@using LPGxWebApp.GlobalData;
@using LPGxWebApp.Response;
@model LPGxWebApp.Pages.SalesmanModel
@{
    ViewData["Title"] = "Salesman";
    ViewData["ActiveMenu"] = "Salesman";  // Set active menu here
    ViewData["OpenMenu"] = "Users";  // Set open menu (for example, if the Setup menu should be expanded)
}
@{
    // Retrieve the message and message type directly, if necessary
    var message = TempData["Message"] as string;
    var messageType = TempData["MessageType"] as string;

    // Retrieve the current time
    var currentTime = DateTime.Now.ToString("yyyy-MM-ddTHH:mm");

    // Retrieve VerifyLoginData from session and check for null
    var verifyLoginData = HttpContext.Session.GetObject<VerifyLoginData>("VerifyLoginData");
    var branchname = HttpContext.Session.GetObject<string>("branchname");

    // Redirect to Login if VerifyLoginData is null
    if (verifyLoginData == null)
    {
        RedirectToPage("/Login/Index");
        return; // Ensure no further code is executed after redirect
    }

    // Use the signon name from the verified login data
    var usercode = verifyLoginData.UserCode;
    var username = verifyLoginData.UserName;
    var userlevel = verifyLoginData.UserLevel;
    var branchcode = verifyLoginData.BranchCode;
}

<!doctype html>

<html lang="en"
      class="light-style layout-menu-fixed layout-compact"
      dir="ltr"
      data-theme="theme-default"
      data-assets-path="~/assets/"
      data-template="vertical-menu-template-free"
      data-style="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

    <title>@ViewData["Title"]</title>

    <meta name="description" content="" />

    <!-- Favicon -->
    <link rel="icon" href="~/images/logo.png" type="image/png">

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&ampdisplay=swap"
          rel="stylesheet" />

    <link rel="stylesheet" href="~/assets/vendor/fonts/remixicon/remixicon.css" />

    <!-- Menu waves for no-customizer fix -->
    <link rel="stylesheet" href="~/assets/vendor/libs/node-waves/node-waves.css" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="~/assets/vendor/css/core.css" class="template-customizer-core-css" />
    <link rel="stylesheet" href="~/assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="~/assets/css/demo.css" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />

    <!-- Page CSS -->
    <!-- Helpers -->
    <script src="~/assets/vendor/js/helpers.js"></script>
    <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="~/assets/js/config.js"></script>

    <!-- Toastr CSS in <head> -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

</head>

<body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <!-- Set Temp data -->
            @{
                TempData["username"] = username;
                TempData["userlevel"] = userlevel;
                TempData["branchcode"] = branchcode;

                if (userlevel == 1)
                    TempData["levelname"] = "Super Admin";
                else if (userlevel == 2)
                    TempData["levelname"] = "Admin";
                else if (userlevel == 3)
                    TempData["levelname"] = "Salesman";
                else if (userlevel == 4)
                    TempData["levelname"] = "Management";
            }
            <!-- Menu -->
            @{
                await Html.RenderPartialAsync("Shared/_MenuPartial");
            }
            <!-- / Menu -->
            <!-- Layout container -->
            <div class="layout-page">
                <!-- Navbar -->
                @{
                    await Html.RenderPartialAsync("Shared/_NavBarPartial");
                }
                <!-- / Navbar -->
                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <!-- Content -->

                    <div class="container-xxl flex-grow-1 container-p-y py-5">
                        <div class="row gy-6">
                            <div class="card shadow-sm p-4">
                                <h5>@ViewData["Title"] Registration Form</h5>
                                <div>
                                    <form id="userCreateForm" action="~/Users/Salesman" method="POST">
                                        <div class="row g-3">
                                            <!-- PersonId (hidden) -->
                                            <div class="col-md-4" style="display: none;">
                                                <div class="mb-3">
                                                    <label for="PersonId" class="form-label">Person Id</label>
                                                    <input type="number" class="form-control" id="PersonId" name="PersonId" readonly value="0" />
                                                </div>
                                            </div>

                                            <!-- Person Name (PersonName) -->
                                            <div class="col-md-4">
                                                <div class="mb-3">
                                                    <label for="PersonName" class="form-label">Name</label>
                                                    <input type="text" class="form-control" id="PersonName" name="PersonName" required />
                                                    <div class="invalid-feedback">Name is required.</div>
                                                </div>
                                            </div>

                                            <!-- Contact Number (ContactNo) -->
                                            <div class="col-md-4">
                                                <div class="mb-3">
                                                    <label for="ContactNo" class="form-label">Contact No</label>

                                                    <div class="d-flex">
                                                        <!-- Country Code Dropdown -->
                                                        <div class="flex-shrink-0" style="width: 30%;">
                                                            <!-- Reduced width for the country code -->
                                                            <select id="CountryCode" name="CountryCode" class="form-control" required>
                                                                <option value="88">+88 (Bangladesh)</option>
                                                                <option value="91">+91 (India)</option>
                                                                <option value="92">+92 (Pakistan)</option>
                                                                <option value="94">+94 (Sri Lanka)</option>
                                                                <option value="1">+1  (USA/Canada)</option>
                                                                <!-- Add more country codes as needed -->
                                                            </select>
                                                        </div>

                                                        <!-- Phone Number Input -->
                                                        <div class="flex-grow-1 ms-2">
                                                            <!-- flex-grow-1 ensures it takes the remaining space, ms-2 for small margin -->
                                                            <input type="text" id="PhoneNumber" name="PhoneNumber" class="form-control" placeholder="Enter phone number" maxlength="15" required />
                                                        </div>

                                                        <!-- Hidden Field for Combined Contact -->
                                                        <input type="text" class="form-control" id="ContactNo" name="ContactNo" value="" required hidden />
                                                    </div>

                                                    <div class="invalid-feedback">Contact No is required</div>
                                                </div>
                                            </div>

                                            <!-- Address (Address) -->
                                            <div class="col-md-4">
                                                <div class="mb-3">
                                                    <label for="Address" class="form-label">Address</label>
                                                    <input type="text" class="form-control" id="Address" name="Address" placeholder="Enter user's address" />
                                                </div>
                                            </div>

                                            <!-- ActiveYN (default to "Y") (hidden) -->
                                            <div class="col-md-4" style="display: none;">
                                                <div class="mb-3">
                                                    <label for="ActiveYN" class="form-label">Enabled</label>
                                                    <select class="form-control" id="ActiveYN" name="ActiveYN" required>
                                                        <option value="Y" selected>Yes</option>
                                                    </select>
                                                </div>
                                            </div>

                                            <!-- BranchCode (hidden) -->
                                            <div class="col-md-4" style="display: none;">
                                                <div class="mb-3">
                                                    <label for="BranchCode" class="form-label">Branch Code</label>
                                                    <input type="text" class="form-control" id="BranchCode" name="BranchCode" value="@branchcode" />
                                                </div>
                                            </div>

                                            <!-- BranchName (hidden) -->
                                            <div class="col-md-4" style="display: none;">
                                                <div class="mb-3">
                                                    <label for="BranchName" class="form-label">Branch Name</label>
                                                    <input type="text" class="form-control" id="BranchName" name="BranchName" value="@branchname" />
                                                </div>
                                            </div>

                                        </div>

                                        <!-- Submit Button -->
                                        <button type="submit" class="btn btn-primary">
                                            <i class="ri-check-double-line"></i> Submit
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="container-xxl flex-grow-1 container-p-y">
                        <div class="row gy-6">
                            <!-- Basic Bootstrap Table -->
                            <div class="card">
                                <h5 class="card-header">@ViewData["Title"]</h5>
                                <div class="table-responsive text-nowrap">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Name</th>
                                                <th>Contact No</th>
                                                <th>Address</th>
                                                <th>Branch Name</th>
                                                <th>Status</th>
                                            </tr>
                                        </thead>
                                        <tbody class="table-border-bottom-0">
                                            @if (Model.SalesmanList != null && Model.SalesmanList.Any())
                                            {
                                                @foreach (var project in Model.SalesmanList.OrderBy(u => u.PersonName))
                                                {
                                                    <tr>
                                                        <!-- Person Name -->
                                                        <td>
                                                            @project.PersonName
                                                        </td>

                                                        <!-- Contact No -->
                                                        <td>
                                                            @project.ContactNo
                                                        </td>

                                                        <!-- Address -->
                                                        <td>
                                                            @project.Address
                                                        </td>

                                                        <!-- Branch Name -->
                                                        <td>
                                                            @branchname
                                                        </td>

                                                        <!-- Status -->
                                                        <td>
                                                            <span class="badge rounded-pill
                                                                @(project.ActiveYN == "Y" ? "bg-label-success" : "bg-label-warning")">
                                                                @(project.ActiveYN == "Y" ? "Active" : "Inactive")
                                                            </span>
                                                        </td>

                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="5" class="text-center">No projects found.</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <!--/ Basic Bootstrap Table -->
                        </div>
                    </div>

                    <!-- Footer -->
                    @{
                        await Html.RenderPartialAsync("Shared/_FooterPartial");
                    }
                    <!-- / Footer -->

                    <div class="content-backdrop fade"></div>
                </div>
                <!-- Content wrapper -->
            </div>
            <!-- / Layout page -->
        </div>

        <!-- Overlay -->
        <div class="layout-overlay layout-menu-toggle"></div>
    </div>
    <!-- / Layout wrapper -->
    <!-- Core JS -->
    <!-- build:js assets/vendor/js/core.js -->
    <script src="~/assets/vendor/libs/jquery/jquery.js"></script>
    <script src="~/assets/vendor/libs/popper/popper.js"></script>
    <script src="~/assets/vendor/js/bootstrap.js"></script>
    <script src="~/assets/vendor/libs/node-waves/node-waves.js"></script>
    <script src="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
    <script src="~/assets/vendor/js/menu.js"></script>

    <!-- endbuild -->
    <!-- Vendors JS -->
    <!-- Main JS -->
    <script src="~/assets/js/main.js"></script>

    <!-- Bootstrap 5 and Popper.js JS -->
    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

    <!-- Include Toastr JS at the end of your page, just before the closing </body> tag -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

    <!-- Now you can configure Toastr and use it -->
    @if (!string.IsNullOrEmpty(message))
    {
        <script type="text/javascript">
            if (typeof toastr !== 'undefined') {
            @if (messageType == "Success")
            {
                <text>toastr.success('@message'); </text>
            }
            else if (messageType == "Error")
            {
                <text>toastr.error('@message'); </text>
            }
            else if (messageType == "Info")
            {
                <text>toastr.info('@message'); </text>
            }
            else if (messageType == "Warning")
            {
                <text>toastr.warning('@message'); </text>
            }
            else
            {
                <text>toastr.info('@message'); </text>  <!-- Default to Info -->
            }
                                                                                                                                                                                            }
            else {
                console.error('Toastr library is not loaded!');
            }
        </script>
    }

    <!-- JavaScript to combine country code and phone number -->
    <script>
        document.getElementById("CountryCode").addEventListener("change", updateVisitorContact);
        document.getElementById("PhoneNumber").addEventListener("input", updateVisitorContact);

        function updateVisitorContact() {
            // Get the selected country code and phone number
            var countryCode = document.getElementById("CountryCode").value;
            var phoneNumber = document.getElementById("PhoneNumber").value;

            // Combine the country code and phone number
            var fullContact = countryCode + phoneNumber;

            // Set the value of the hidden input
            document.getElementById("ContactNo").value = fullContact;
        }
    </script>

    <!-- Optional CSS to style valid and invalid inputs -->
    <style>
        .is-valid {
            border-color: #28a745;
        }

        .is-invalid {
            border-color: #dc3545;
        }

            .is-invalid ~ .invalid-feedback {
                display: block;
            }
    </style>

    <!-- JavaScript to toggle between Enable and Disable text -->
    <script>
        function toggleText() {
            var switchLabel = document.getElementById('twofa-label');
            var switchInput = document.getElementById('twofa');

            if (switchInput.checked) {
                switchLabel.textContent = 'Disable OTP Code';  // Change text to Disable
            } else {
                switchLabel.textContent = 'Enable OTP Code';  // Change text to Enable
            }
        }
    </script>

    <!-- Page JS -->
    <!-- Place this tag before closing body tag for github widget button. -->
    <script async defer src="https://buttons.github.io/buttons.js"></script>
</body>
</html>


